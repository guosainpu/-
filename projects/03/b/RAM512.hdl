// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
	DMux8Way(in=true, sel[0..2]=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

	And(a=a, b=load, out=load0);
    And(a=b, b=load, out=load1);
    And(a=c, b=load, out=load2);
    And(a=d, b=load, out=load3);
    And(a=e, b=load, out=load4);
    And(a=f, b=load, out=load5);
    And(a=g, b=load, out=load6);
    And(a=h, b=load, out=load7);

    RAM64(in=in, load=load0, address[0..5]=address[0..5], out=R0);
    RAM64(in=in, load=load1, address[0..5]=address[0..5], out=R1);
    RAM64(in=in, load=load2, address[0..5]=address[0..5], out=R2);
    RAM64(in=in, load=load3, address[0..5]=address[0..5], out=R3);
    RAM64(in=in, load=load4, address[0..5]=address[0..5], out=R4);
    RAM64(in=in, load=load5, address[0..5]=address[0..5], out=R5);
    RAM64(in=in, load=load6, address[0..5]=address[0..5], out=R6);
    RAM64(in=in, load=load7, address[0..5]=address[0..5], out=R7);

    Mux8Way16(a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7, sel[0..2]=address[6..8], out=out);
}